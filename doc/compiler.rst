Компилятор Lisp
==============================

Виртуальная машина
------------------------------

Точка входа виртуальной машины - функция vm-run, принимающая на вход список инструкций и выполняющая каждую из них последовательно.

Список регистров
------------------------------

- ACC - хранит результат последней операции.
- ENV - содержит окружение программы - список пар ключ-значений символов.

Список инструкций
------------------------------

- LDA expr - поместить expr в регистр ACC.
- JMP label - безусловный переход на метку label.
- JNT label - если ACC != t, то переход на метку label.
- ENVSET sym - устанавливает значение символа sym в регистре ENV равным значению регистра ACC (или добавляет sym со значением ACC в ENV, если sym не найден в ENV).
- ENVGET sym - ищет значение sym в ENV и помещает его в ACC (если sym не найден в ENV, то помещает сообщение об ошибке в ACC и завершает выполнение текущей программы).

Функции
------------------------------

::
   
   (vm-run program)
     program - список инструкций (пар опкодов и операндов).
     Последовательно выполняет каждую инструкцию.
     Возвращает содержимое регистра ACC.

::
   
   (compile expr)
     expr - S-выражение.
     Создаёт список инструкций для вычисления S-выражения expr
     на виртуальной машине с помощью функции vm-run.
     Примеры вычисления атома:
       5 -> ((lda 5))
       t -> ((lda t))
       a -> ((envget a))

::
   
   (compile-progn lst)
     lst - список S-выражений (тело progn).
     Вычисляет progn выражение - последовательно генерирует инструкции
     для каждого элемента тела progn из списка lst.
     Пример:
       (progn 1 2 3) -> ((lda 1) (lda 2) (lda 3))

::
   
   (compile-if if-body)
     if-body - тело if-выражения (условие, ветка по "да" и ветка по "нет").
     Генерирует инструкции, вычисляющие if-выражение.
     Пример:
       (if (t1 t2 t3) (a1 a2 a3) (b1 b2 b3)) ->
       (
          t1 t2 t3
          (jnt label-false)
          a1 a2 a3
          (jmp label-after)
          label-false
          b1 b2 b3
          label-after
       )

::

   (compile-setq args)
     args - список аргументов (символ и S-выражение)
     Генерирует инструкции, вычисляющие setq-выражение.
     Примеры:
       (setq x (a1 a2 a3)) ->
       (
         a1 a2 a3
         (envset x)
         (lda x)
       )
       (setq (f) 5) ->
       "Compilation error: Variable name is not a symbol: (f)"
